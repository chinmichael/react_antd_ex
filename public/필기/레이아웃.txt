☆ 무엇이 되었든 공식 문서의 각 컴포넌트 어트리뷰트를 잘 확인하자
https://ant.design/components/

1. Grid

일단 개인적으로 부트스트랩 같은 라이브러리 이용하는 이유 (다른 디자인은 걍 CSS로 만든다고 치고)

기본적인 사용법은 react-bootstrap과 거의 유사

import { Row, Col } from 'antd';

를 한 뒤

<Row>
    <Col span={24} sm={12}>
    <Col span={24} sm={12}>
</Row>

이런식으로 기준점을 잡아 Row안에서 Col의 합이 24되게 잡아준다.

부트스트랩과 큰 차이점은
합이 12가 아닌 24라 더 세세한 분할이 가능해졌고 (이건 쌉땡큐네)
마지막 기준점 아래는 기본적으로 flex 세로정렬이 되는게 아니라 span으로 따로 지정을 해줘야 한다.

기본적인 반응형 기준은 부트스트랩랑 조금 다르다

xs(480) | sm(576) | md(768) | lg(992) | xl(1200) | xxl(1600)까지 있다 (보통 sm, md, lg) 쓰겠지만

이밖에 Col에 줄 수 있는 offset={}이나 order={} 등 여러 재밌는 어트리뷰트가 있지만 그중에 좀 쓸만해 보이는 게

Row에 justify="" 로 빈 여유 공간에 Col 배치를 어떻게 하냐를 또 지정이 가능하다
start | center | end | space-between | space-around

Row에 align=""로 Col의 align 지정 가능
top | middle | bottom

Row에 gutter={[가로, 세로]} 로 Row 내부 Col 사이의 간격 설정 가능
각 8 ~ 48(px) 까지 8개 단위 >> 문제는 이거 반응형에는 안 먹히고 span에만 먹힌다 >> 아닠 Grid 쓰는 중요 이유가 Responsive Flex 아닙니깤ㅋㅋ

==================================================================================================

2. Divder, Space

Divider

<hr>요소를 유용하게 쓸만한 컴포넌트로 만든 것

import { Divder, Space } from 'antd';

<Divider>는 그냥 <hr>처럼 선만 줄 수 있고
<Divider orientation="" plain>Text<Divder> 로 사이에 텍스트를 줄 수 있다. orientation은 텍스트 방향, plain은 볼드체가 아니게 설정


<Space>는 내부 요소끼리의 간격을 줄 수 있다
<Space size={[가로간격, 세로간격]} align>으로 간격 설정 가능(100까지)으로 내부 요소의 align도 설정 가능 근데 이것도 일종의 div이므로 Row 같은데서 안먹힌다

==================================================================================================

3. <Layout>은 나중에 해보면서 적어야 할듯

const {Header, Sider, Content, Footer} = Layout
로 일종의 각 <Container>에 이름을 붙여 배치한 것

공식문서의 각 컴포넌트 어트리뷰트를 잘 확인해야 하는 이유 중 하나가
Sider와 같은 경우 className등으로 셀렉터로 css width 조절이 안된다
대신 width 어트리뷰트로 조정이 가능하다

특히 Sider는 trigger={}

collasped={bool} 설정이나 collaspedWidth={} breakpoint="" 등이 있다

collaspedWidth={0} breakpoint="" 로 하면 자동적으로 펼치기 버튼이 생성됨

collapsible collapsed={bool} 로 어느정도 수준의 collapsed 설정도 가능하다 toggleSet(!toggle)을 이용하자!

collapsible에서 trigger={null}로 해야 디폴트 버튼이 사라진다

==================================================================================================

4. Nav >> Menu 

Layout은 아니지만 좀 자주 쓰게 될 수 있으므로

import { Menu } from 'antd';
const { SubMenu } = Menu;

<Menu defaultSelectedKeys={["1"]} defaultOpenKeys={[]} theme="">
    <Menu.item key="1">
    </Menu.item>
    <SubMenu key="sub1">
        <Menu.item key="2" title="">
        </Menu.item>
    </SubMenu>
</Menu>

이런식으로 배열 구성으로 처리되어 있기에 key 지정을 해줘야 한다는 특징이 있다.